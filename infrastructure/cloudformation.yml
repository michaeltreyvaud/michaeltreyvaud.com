Parameters:
  AppName:
    Type: String
    Default: michaeltreyvauddotcom
    Description: The name of the Application.
  MicroService:
    Type: String
    Default: ui
    Description: Name of the micro service
  StackEnvironment:
    Type: String
    Default: prod
    Description: The environment we're refrencing.
  GitHubToken:
    Type: String
    Description: Github token to allow codebuild hook
  GitHubRepo:
    Type: String
    Description: GitHub repo for codebuild to reference
  AcmCertificateArn:
    Type: String
    Description: ACM Certificate for registerd domain name
  AppDomainName:
    Type: String
    Description: The app domain name - manual SSL in N.Virginia region

Resources:
  CodeBuildCredentials:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      ServerType: GITHUB
      AuthType: PERSONAL_ACCESS_TOKEN
      Token: !Ref GitHubToken

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AppName}-${StackEnvironment}-${MicroService}-CodeBuildProject"
      Description: 'Build environment for the front end'
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: True
        EnvironmentVariables:
        - Name: AWS_ACCOUNT_ID
          Type: PLAINTEXT
          Value: !Sub ${AWS::AccountId}
        - Name: AWS_REGION
          Type: PLAINTEXT
          Value: !Sub ${AWS::Region}
        - Name: APP_NAME
          Type: PLAINTEXT
          Value: !Sub ${AppName}
        - Name: ENVIRONMENT
          Type: PLAINTEXT
          Value: !Sub ${StackEnvironment}
        - Name: BUCKET
          Type: PLAINTEXT
          Value: !Ref WebBucket
        - Name: CLOUDFRONT_DISTRIBUTION_ID
          Type: PLAINTEXT
          Value: !Ref CloudfrontDistribution
      Source:
        Location: !Ref GitHubRepo
        Type: GITHUB
        BuildSpec: "buildspec.yml"
        Auth:
          Resource: !Ref CodeBuildCredentials
          Type: OAUTH
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
      TimeoutInMinutes: 60
      Cache:
        Modes:
          - LOCAL_SOURCE_CACHE
          - LOCAL_DOCKER_LAYER_CACHE
          - LOCAL_CUSTOM_CACHE
        Type: LOCAL
    DependsOn: CodeBuildCredentials

  WebBucket:
    Type: "AWS::S3::Bucket"
    DeletionPolicy: Retain
    Properties:
      AccessControl: PublicRead
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
          - "Authorization"
          AllowedMethods:
          - "GET"
          AllowedOrigins:
          - "*"
      WebsiteConfiguration:
        IndexDocument: "index.html"
        ErrorDocument: "index.html"

  WebBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebBucket
      PolicyDocument:
        Statement:
        - Effect: Allow
          Sid: PublicReadForGetBucketObjects
          Principal:
            AWS:
              - !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudfrontIdentity}"
          Action: s3:GetObject
          Resource: !Join ['', ['arn:aws:s3:::', !Ref 'WebBucket', /*]]

  CloudfrontPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: "CloudfrontPolicy"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - s3:GetObject
          Resource:
          - !Join ['', ['arn:aws:s3:::', !Ref 'WebBucket', /*]]

  CloudfrontIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "Used to access S3 Web bucket"

  CloudfrontDistribution:
    DependsOn: [WebBucket]
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt WebBucket.DomainName
            Id: !Ref WebBucket
            S3OriginConfig:
              OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudfrontIdentity}"
        Aliases:
        - !Sub "*.${AppDomainName}"
        DefaultCacheBehavior:
          AllowedMethods:
            - "GET"
            - "HEAD"
          CachedMethods:
            - "HEAD"
            - "GET"
          Compress: true
          DefaultTTL: 3600
          ForwardedValues:
            QueryString: false
          MaxTTL: 86400
          MinTTL: 0
          TargetOriginId: !Ref WebBucket
          ViewerProtocolPolicy : "redirect-to-https"
        DefaultRootObject: "index.html"
        Enabled: true
        Comment: HACCP React Front End
        HttpVersion: "http2"
        IPV6Enabled: false
        PriceClass: "PriceClass_All"
        ViewerCertificate:
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
  
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
        Version: "2012-10-17"
      RoleName: !Sub ${AppName}-${StackEnvironment}-${MicroService}-CodeBuildRole

  CodeBuildPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - codebuild:StartBuild
              - codebuild:BatchGetBuilds
              - codebuild:CreateReportGroup
              - codebuild:CreateReport
              - codebuild:UpdateReport
              - codebuild:BatchPutTestCases
              - cloudwatch:PutMetricData
              - s3:PutObject
              - s3:GetObject
              - s3:DeleteObject
              - cloudfront:CreateInvalidation
            Effect: Allow
            Resource: "*"
        Version: "2012-10-17"
      PolicyName: !Sub ${AppName}-${StackEnvironment}-${MicroService}-CodeBuildPolicy
      Roles:
        - Ref: CodeBuildRole